swagger: "2.0"
info:
  version: "1.8.0"
  title: "jc://remote/"
  description: API to control remote control devices
  
consumes:
  - application/json
produces:
  - application/json

basePath: /api


paths:
#------------------------ TEST ------------------------

  /test/:
    get:
      operationId: modules.server_cmd.test_cmd
      tags:
        - maintain
      summary: list status data
      description: list status data
      responses:
        200:
          description: Successfully status data
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
              TEST:
                type: object

#------------------------ LIST SERVER STATUS ------------------------

  /list/:
    get:
      operationId: modules.server_cmd.RemoteList
      tags:
        - list
      summary: list status and remote definition data
      description: list status and remote definition data
      responses:
        200:
          description: Successfully status data
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
              DATA:
                $ref: "#/definitions/DATA"

  /status/:
    get:
      operationId: modules.server_cmd.RemoteStatus
      tags:
        - status
      summary: list status data
      description: list status data
      responses:
        200:
          description: Successfully status data
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"


  /send_check/{device}/{button}/:
    get:
      operationId: modules.server_cmd.RemoteOnOff
      tags:
        - send
      summary: send IR command including a check, if device is on
      description: if device is off, no IR command is send except on-off
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully send IR command
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"

  /send/{device}/{button}/:
    get:
      operationId: modules.server_cmd.Remote
      tags:
        - send
      summary: send command and execute via queue
      description: the command is send never the less the device is on or off
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully send IR command
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"

  /send-data/{device}/{button}/{text}/:
    get:
      operationId: modules.server_cmd.RemoteSendText
      tags:
        - send
      summary: send text and execute via queue
      description: the command is send never the less the device is on or off
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button
          in: path
          type: string
          required: true
        - name: text
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully send IR command
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"

  /set/{device}/{command}/{value}/:
    get:
      operationId: modules.server_cmd.RemoteSet
      tags:
        - send
      summary: send command and value via queue
      description: the command is send never the less the device is on or off
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: command
          in: path
          type: string
          required: true
        - name: value
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully send IR command
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"

  /makro/{makro}/:
    get:
      operationId: modules.server_cmd.RemoteMakro
      tags:
        - send
      summary: send marko
      description: the makro commands are send
      parameters:
        - name: makro
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully send makro commands
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"


  /makro/:
    put:
      operationId: modules.server_cmd.RemoteMakroChange
      tags:
        - send
      summary: edit marko
      description: change markose
      parameters:
        - name: makros
          in: body
          description: makros, dev-on/off, scene-on/off definition
          schema:
            type: object     
      responses:
        200:
          description: Successfully send makro commands
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"


#------------------------ EDIT FUNCTIONS ------------------------

  /button/{device}/{button}/:
    put:
      operationId: modules.server_cmd.RemoteAddButton
      tags:
        - edit
      summary: add button
      description: add button to remote layout
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully added button
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
                
  /button/{device}/{button_number}/:
    delete:
      operationId: modules.server_cmd.RemoteDeleteButton
      tags:
        - edit
      summary: delete button
      description: delete button from device from database
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button_number
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully deleted button
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
                
#------------------------------------------------------

  /move/{type}/{device}/{direction}/:
    post:
      operationId: modules.server_cmd.RemoteMove
      tags:
        - edit
      summary: move device or scene in menu
      description: move device or scene in menu
      parameters:
        - name: type
          in: path
          type: string
          enum: ["device","scene"]
          required: true
        - name: device
          in: path
          type: string
          required: true
        - name: direction
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully deleted button
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
                
#------------------------------------------------------

  /command/{device}/{button}/:
    post:
      operationId: modules.server_cmd.RemoteRecordCommand
      tags:
        - edit
      summary: record command for button
      description: record button command of an existing device
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully recorded command to button
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
    delete:
      operationId: modules.server_cmd.RemoteDeleteCommand
      tags:
        - edit
      summary: delete command for button
      description: delete command from device from database
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully deleted button
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"

#------------------------------------------------------

  /scene/{scene}/:
    delete:
      operationId: modules.server_cmd.RemoteDeleteScene
      tags:
        - edit
      summary: delete scene
      description: delete scene including buttons from database
      parameters:
        - name: scene
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully deleted scene
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"               
    post:
      operationId: modules.server_cmd.RemoteEditScene
      tags:
        - edit
      summary: edit scene data
      description: edit scene data in database
      parameters:
        - name: scene
          in: path
          type: string
          required: true
        - name: info
          in: body
          description: parameters of device that can be edited
          schema:
            type: object     
      responses:
        200:
          description: Successfully edited scene
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
    put:
      operationId: modules.server_cmd.RemoteAddScene
      tags:
        - edit
      summary: add scene
      description: add scene to database
      parameters:
        - name: scene
          in: path
          type: string
          required: true
        - name: info
          in: body
          description: parameters of device that should be added
          schema:
            type: object     
      responses:
        200:
          description: Successfully added device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
                
#------------------------------------------------------

  /device/{device}/:
    delete:
      operationId: modules.server_cmd.RemoteDeleteDevice
      tags:
        - edit
      summary: delete device
      description: delete device including buttons from database
      parameters:
        - name: device
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully deleted device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"               
    post:
      operationId: modules.server_cmd.RemoteEditDevice
      tags:
        - edit
      summary: edit device data
      description: edit device data in database
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: info
          in: body
          description: parameters of device that can be edited
          schema:
            type: object     
      responses:
        200:
          description: Successfully edited device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
    put:
      operationId: modules.server_cmd.RemoteAddDevice
      tags:
        - edit
      summary: add device
      description: add device to database
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: device_data
          in: body
          description: parameters of device that should be added
          schema:
            type: object     
      responses:
        200:
          description: Successfully added device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
                
#------------------------------------------------------

  /template/{device}/{template}/:
    put:
      operationId: modules.server_cmd.RemoteAddTemplate
      tags:
        - edit
      summary: add template to device
      description: add template to device
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: template
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully added device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
                
  /visibility/{type}/{device}/{value}/:
    put:
      operationId: modules.server_cmd.RemoteChangeVisibility
      tags:
        - edit
      summary: add template to device
      description: add template to device
      parameters:
        - name: type
          in: path
          type: string
          required: true
        - name: device
          in: path
          type: string
          required: true
        - name: value
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully added device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"

  /main-audio/{device}/:
    post:
      operationId: modules.server_cmd.RemoteChangeMainAudio
      tags:
        - edit
      summary: change main audio device
      description: change main audio device
      parameters:
        - name: device
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully changed device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"

#------------------------ SUPPORT FUNCTIONS ------------------------

  /version/{APPversion}/:
    get:
      operationId: modules.server_cmd.RemoteCheckUpdate
      tags:
        - maintain
      summary: check if APP-version is supported
      description: check if APP-version is supported
      parameters:
        - name: APPversion
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully done reset
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
                                
  /reload/:
    get:
      operationId: modules.server_cmd.RemoteReload
      tags:
        - maintain
      summary: reload data from config files
      description: reload data from config files
      responses:
        200:
          description: Successfully done reset
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"

  /test/:
    get:
      operationId: modules.server_cmd.RemoteTest
      tags:
        - maintain
      summary: reload data from config files
      description: reload data from config files
      responses:
        200:
          description: Successfully done reset
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"

  /reset/:
    get:
      operationId: modules.server_cmd.RemoteReset
      tags:
        - maintain
      summary: reset all configuration status values
      description: set all volumes to zero and turn off all devices before using this command
      responses:
        200:
          description: Successfully read check APP version vs. API version
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"

  /reset-audio/:
    get:
      operationId: modules.server_cmd.RemoteResetAudio
      tags:
        - maintain
      summary: reset all volume values
      description: set all volumes to zero before using this command
      responses:
        200:
          description: Successfully read check APP version vs. API version
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              CONFIG:
                $ref: "#/definitions/CONFIG"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
                
                
#------------------------ DATA MODEL DEFINITIONS ------------------------

definitions:

  API:
    type: object
    properties:
      stage:
        type: string
      rollout:
        type: string
      version:
        type: string
      name:
        type: string

  REQUEST:
    type: object
    properties:
      load-time:
        type: number
        format: float
      start-time:
        type: number
        format: float
        
      Parameter:
        type: string
      Device:
        type: string
      Button:
        type: string
      Return:
        type: string
      ReturnCode:
        type: string

  STATUS:
    type: object
    properties:
      devices:
        type: object
        properties:
          "<device-id>":
            type: object
            properties:
              "<device-specific-key-value-pairs>":
                type: string
      interfaces:
        type: object
        properties:
          "<api-interface>":
            type: string
      last_button:
        type: string
      request_time:
        type: object
      scenes:
        type: array
        items:
          type: string
      system:
        type: object

  CONFIG:
    type: object
    properties:
      button_colors:
        type: object
      button_images:
        type: object
      devices:
        type: object
        properties:
          "<device-id>":
            type: object
            properties:
              buttons:
                type: array
                items:
                  type: string
              commands:
                type: object
                properties:
                  set:
                    type: array
                    items:
                      type: string
                  get:
                    type: array
                    items:
                      type: string
              data:
                type: object
                properties:
                  types: 
                    type: object
                  values:
                    type: object
              interface:
                type: object
                properties:
                  api:
                    type: string
                  files:
                    type: array
                    items:
                      type: string
                  method:
                    type: string
                    items:
                      type: string
              url:
                type: string
      interfaces:
        type: object
      main-audio:
        type: string
      methods:
        type: object

  DATA:
    type: object
    properties:
      devices:
        type: object
        properties:
          "<device-id":
            type: object
            properties:
              config:
                type: object
              remote:
                type: object
                properties:
                  description:
                    type: string
                  display:
                    type: object
                  remote:
                    type: array
                    items:
                      type: string
                  type:
                    type: string
                    enum: ["device"]
              settings:
                type: object
                properties:
                  description:
                    type: string
                  image:
                    type: string
                  label:
                    type: string
                  main-audio:
                    type: string
                    enum: ["yes","no"]
                  position:
                    type: integer
                  visible:
                    type: string
                    enum: ["yes","no"]
              status:
                type: object
      scenes:
        type: object
        properties:
          "<scene-id>":
            type: object
            properties:
              label:
                type: string
              devices:
                type: array
                items:
                  type: string
              remote:
                type: array
                items:
                  type: string
              channel:
                type: object
                properties:
                  "<channel-name>":
                    type: array
                    items:
                      type: string
      makros:
        type: object
        properties:
          "<makro-name>":
            type: object
            properties:
              "dev-on":
                type: object
                properties:
                  "<button-name>":
                    type: array
                    items:
                      type: string
              "dev-off":
                type: object
                properties:
                  "<button-name>":
                    type: array
                    items:
                      type: string
              "makro":
                type: object
                properties:
                  "<button-name>":
                    type: array
                    items:
                      type: string
              "scene-on":
                type: object
                properties:
                  "<button-name>":
                    type: array
                    items:
                      type: string
              "scene-off":
                type: object
                properties:
                  "<button-name>":
                    type: array
                    items:
                      type: string
      templates:
        type: object
        properties:
          "<template-name>":
            type: object
            properties:
              description:
                type: string 
              label:
                type: string            
              remote:
                type: array
                items:
                  type: string            
      template_list:
        type: array
        items:
          type: string


