swagger: "2.0"
info:
  version: "1.4.2"
  title: "jc://remote/"
  description: API to control remote control devices
  
consumes:
  - application/json
produces:
  - application/json

basePath: /api


paths:

#------------------------ TEST ------------------------

  /test/:
    get:
      operationId: modules_api.server_cmd.test_cmd
      tags:
        - test
      summary: list status data
      description: list status data
      responses:
        200:
          description: Successfully status data
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
              DATA:
                $ref: "#/definitions/DATA"

#------------------------ LIST SERVER STATUS ------------------------

  /list/:
    get:
      operationId: modules_api.server_cmd.RemoteList
      tags:
        - interface
      summary: list status data
      description: list status data
      responses:
        200:
          description: Successfully status data
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"
              STATUS:
                $ref: "#/definitions/STATUS"
              DATA:
                $ref: "#/definitions/DATA"


  /sendIR_check/{device}/{button}/:
    get:
      operationId: modules_api.server_cmd.RemoteOnOff
      tags:
        - interface
      summary: send IR command including a check, if device is on
      description: if device is off, no IR command is send except on-off
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully send IR command
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"

  /sendIR/{device}/{button}/:
    get:
      operationId: modules_api.server_cmd.Remote
      tags:
        - interface
      summary: send IR command
      description: the command is send never the less the device is on or off
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully send IR command
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"

#------------------------ EDIT FUNCTIONS ------------------------

  /button/{device}/{button}/:
    put:
      operationId: modules_api.server_cmd.RemoteAddButton
      tags:
        - interface
      summary: add button
      description: record button command of an existing device
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully added button
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"
                
    delete:
      operationId: modules_api.server_cmd.RemoteDeleteButton
      tags:
        - interface
      summary: delete button
      description: delete button from device from database
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: button
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully deleted button
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"

  /device/{device}/{description}/:
    put:
      operationId: modules_api.server_cmd.RemoteAddDevice
      tags:
        - interface
      summary: add device
      description: add device to database
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: description
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully added device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"

  /template/{device}/{template}/:
    put:
      operationId: modules_api.server_cmd.RemoteAddTemplate
      tags:
        - interface
      summary: add template to device
      description: add template to device
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: template
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully added device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"
                
  /visibility/{device}/{value}/:
    put:
      operationId: modules_api.server_cmd.RemoteChangeVisibility
      tags:
        - interface
      summary: add template to device
      description: add template to device
      parameters:
        - name: device
          in: path
          type: string
          required: true
        - name: value
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully added device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"                

  /device/{device}/:
    delete:
      operationId: modules_api.server_cmd.RemoteDeleteDevice
      tags:
        - interface
      summary: delete device
      description: delete device including buttons from database
      parameters:
        - name: device
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully deleted device
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"

#------------------------ SUPPORT FUNCTIONS ------------------------

  /version/{APPversion}/:
    get:
      operationId: modules_api.server_cmd.RemoteCheckUpdate
      tags:
        - maintain
      summary: check if APP-version is supported
      description: check if APP-version is supported
      parameters:
        - name: APPversion
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successfully done reset
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"
                                
  /reload/:
    get:
      operationId: modules_api.server_cmd.RemoteReload
      tags:
        - maintain
      summary: reload data from config files
      description: reload data from config files
      responses:
        200:
          description: Successfully done reset
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"

  /test/:
    get:
      operationId: modules_api.server_cmd.RemoteTest
      tags:
        - maintain
      summary: reload data from config files
      description: reload data from config files
      responses:
        200:
          description: Successfully done reset
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"

  /reset/:
    get:
      operationId: modules_api.server_cmd.RemoteReset
      tags:
        - maintain
      summary: reset all configuration status values
      description: set all volumes to zero and turn off all devices before using this command
      responses:
        200:
          description: Successfully read check APP version vs. API version
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"

  /reset_audio/:
    get:
      operationId: modules_api.server_cmd.RemoteResetAudio
      tags:
        - maintain
      summary: reset all volume values
      description: set all volumes to zero before using this command
      responses:
        200:
          description: Successfully read check APP version vs. API version
          schema:
            properties:
              API:
                $ref: "#/definitions/API"
              REQUEST:
                $ref: "#/definitions/REQUEST"
                
                
#------------------------ DATA MODEL DEFINITIONS ------------------------

definitions:

  API:
    type: object
    properties:
      stage:
        type: string
      rollout:
        type: string
      version:
        type: string
      name:
        type: string

  REQUEST:
    type: object
    properties:
      load-time:
        type: number
        format: float
      start-time:
        type: number
        format: float
      command:
        type: string
      status:
        type: string
      db_filter:
        type: string

  STATUS:
    type: object
    properties:
      active_device:
        type: string
      last_button:
        type: string

  CONFIG:
    type: object
    properties:
      button_colors:
        type: object
      button_images:
        type: object

  DATA:
    type: object
    properties:
      devices:
        type: object
      scene_remotes:
        type: object
      device_status:
        type: object
      device_makros:
        type: object


